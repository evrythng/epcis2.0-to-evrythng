# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: clement-epcis-proxy # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs12.x

package:
  include:
    - events.js
    - epcisquery.js
    - publicaccess.secret
    - ../node_modules/**

  exclude:
    - packages.json

functions:
  capture:
    handler: handler.capture
    events:
      - http:
          path: capture
          method: post
          parameters:
            headers:
              Authorization: false

  eventType:
    handler: handler.getEventTypes
    events:
      - http:
          path: events
          method: get
          parameters:
            headers:
              Authorization: false

  events:
    handler: handler.getEvents
    events:
      - http:
          path: events/{eventType}
          method: get
          request:
            parameters:
              path:
                eventType: true
              headers:
                Authorization: false

  eventsById:
    handler: handler.getEventById
    events:
      - http:
          path: events/{eventType}/{eventID}
          method: get
          request:
            parameters:
              path:
                eventType: true
                eventID: true
              headers:
                Authorization: false

  debug:
    handler: handler.debug
    events:
      - http:
          path: debug
          method: get


#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
